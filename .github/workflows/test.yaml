on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variation:
          - base_image: 'ubuntu:22.04'
            variant: 'core'
            arch: 'amd64'
            model: 'generic'
            kubernetes_distro: 'k3s'
            trusted_boot: 'true'
            event_type: 'push'
            ref_name: 'v1.0.0'
          - base_image: 'alpine:3.18'
            variant: 'core'
            arch: 'arm64'
            model: 'generic'
            kubernetes_distro: 'k0s'
            trusted_boot: 'false'
          - base_image: 'debian:11'
            variant: 'standard'
            arch: 'amd64'
            model: 'generic'
            kubernetes_distro: ''
            trusted_boot: 'true'
          - base_image: 'opensuse/leap:15.6'
            variant: 'standard'
            arch: 'amd64'
            model: 'generic'
            kubernetes_distro: ''
            trusted_boot: 'false'
            event_type: 'push'
            ref_name: 'main'
          - base_image: 'nvidia/cuda:11.8.0-base-ubuntu22.04'
            variant: 'standard'
            arch: 'arm64'
            model: 'nvidia-jetson-agx-orin'
            kubernetes_distro: ''
            trusted_boot: 'false'
            event_type: 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Simulate Event
        run: |
          echo "Simulating event: ${{ matrix.variation.event_type }}"
          echo "GITHUB_EVENT_NAME=${{ matrix.variation.event_type }}" >> $GITHUB_ENV
          if [[ "${{ matrix.variation.event_type }}" == "push" ]]; then
            echo "GITHUB_REF_NAME=${{ matrix.variation.ref_name }}" >> $GITHUB_ENV
          fi
      - name: Generate Image Tag
        id: generate_tag
        uses: ./imageTag
        with:
          base_image: ${{ matrix.variation.base_image }}
          variant: ${{ matrix.variation.variant }}
          arch: ${{ matrix.variation.arch }}
          model: ${{ matrix.variation.model }}
          kubernetes_distro: ${{ matrix.variation.kubernetes_distro }}
          trusted_boot: ${{ matrix.variation.trusted_boot }}
          event_type: ${{ matrix.variation.event_type }}

      - name: Validate Image Tag Output
        run: |
          echo "Generated Image Tag: ${{ steps.generate_tag.outputs.image_tag }}"
          # Add validation logic here if needed
          if [[ -z "${{ steps.generate_tag.outputs.image_tag }}" ]]; then
            echo "Error: Image tag output is empty!"
            exit 1
          fi
          # Validate that -uki is present if trusted_boot is true
          if [[ "${{ matrix.variation.trusted_boot }}" == "true" ]]; then
            if [[ "${{ steps.generate_tag.outputs.image_tag }}" != *"-uki"* ]]; then
              echo "Error: Image tag does not contain '-uki' while trusted_boot is true!"
              exit 1
            fi
          fi
          # Validate ref_name logic
          if [[ "${{ matrix.variation.event_type }}" == "push" && "${{ matrix.variation.ref_name }}" == v* ]]; then
            if [[ "${{ steps.generate_tag.outputs.image_tag }}" != *"${{ matrix.variation.ref_name }}"* ]]; then
              echo "Error: Image tag does not contain the ref_name '${{ matrix.variation.ref_name }}'!"
              exit 1
            fi
          elif [[ "${{ matrix.variation.event_type }}" == "push" && "${{ matrix.variation.ref_name }}" != v* ]]; then
            if [[ "${{ steps.generate_tag.outputs.image_tag }}" != *"${{ github.sha }}"* ]]; then
              echo "Error: Image tag does not contain the github.sha '${{ github.sha }}' when ref_name does not match 'v*'!"
              exit 1
            fi
          fi
